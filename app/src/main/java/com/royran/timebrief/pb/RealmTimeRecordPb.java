// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: realm_time_record.proto

package com.royran.timebrief.pb;

public final class RealmTimeRecordPb {
  private RealmTimeRecordPb() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RealmTimeRecordOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb.RealmTimeRecord)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 id = 1;</code>
     * @return The id.
     */
    long getId();

    /**
     * <code>int32 timeStatus = 2;</code>
     * @return The timeStatus.
     */
    int getTimeStatus();

    /**
     * <code>int64 createTimeMillis = 3;</code>
     * @return The createTimeMillis.
     */
    long getCreateTimeMillis();

    /**
     * <code>int64 updateTimeMillis = 4;</code>
     * @return The updateTimeMillis.
     */
    long getUpdateTimeMillis();

    /**
     * <code>int64 startTimeMillis = 5;</code>
     * @return The startTimeMillis.
     */
    long getStartTimeMillis();

    /**
     * <code>int64 endTimeMillis = 6;</code>
     * @return The endTimeMillis.
     */
    long getEndTimeMillis();

    /**
     * <code>int64 fireTimeMillis = 7;</code>
     * @return The fireTimeMillis.
     */
    long getFireTimeMillis();

    /**
     * <code>int64 pauseTimeMillis = 8;</code>
     * @return The pauseTimeMillis.
     */
    long getPauseTimeMillis();

    /**
     * <code>int64 increasedTimeMillis = 9;</code>
     * @return The increasedTimeMillis.
     */
    long getIncreasedTimeMillis();

    /**
     * <code>int64 activityDateMillis = 10;</code>
     * @return The activityDateMillis.
     */
    long getActivityDateMillis();

    /**
     * <code>string title = 11;</code>
     * @return The title.
     */
    String getTitle();
    /**
     * <code>string title = 11;</code>
     * @return The bytes for title.
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    /**
     * <code>string summary = 12;</code>
     * @return The summary.
     */
    String getSummary();
    /**
     * <code>string summary = 12;</code>
     * @return The bytes for summary.
     */
    com.google.protobuf.ByteString
        getSummaryBytes();
  }
  /**
   * Protobuf type {@code pb.RealmTimeRecord}
   */
  public  static final class RealmTimeRecord extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb.RealmTimeRecord)
      RealmTimeRecordOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RealmTimeRecord.newBuilder() to construct.
    private RealmTimeRecord(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RealmTimeRecord() {
      title_ = "";
      summary_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new RealmTimeRecord();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RealmTimeRecord(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 16: {

              timeStatus_ = input.readInt32();
              break;
            }
            case 24: {

              createTimeMillis_ = input.readInt64();
              break;
            }
            case 32: {

              updateTimeMillis_ = input.readInt64();
              break;
            }
            case 40: {

              startTimeMillis_ = input.readInt64();
              break;
            }
            case 48: {

              endTimeMillis_ = input.readInt64();
              break;
            }
            case 56: {

              fireTimeMillis_ = input.readInt64();
              break;
            }
            case 64: {

              pauseTimeMillis_ = input.readInt64();
              break;
            }
            case 72: {

              increasedTimeMillis_ = input.readInt64();
              break;
            }
            case 80: {

              activityDateMillis_ = input.readInt64();
              break;
            }
            case 90: {
              String s = input.readStringRequireUtf8();

              title_ = s;
              break;
            }
            case 98: {
              String s = input.readStringRequireUtf8();

              summary_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RealmTimeRecordPb.internal_static_pb_RealmTimeRecord_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RealmTimeRecordPb.internal_static_pb_RealmTimeRecord_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RealmTimeRecord.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>int64 id = 1;</code>
     * @return The id.
     */
    public long getId() {
      return id_;
    }

    public static final int TIMESTATUS_FIELD_NUMBER = 2;
    private int timeStatus_;
    /**
     * <code>int32 timeStatus = 2;</code>
     * @return The timeStatus.
     */
    public int getTimeStatus() {
      return timeStatus_;
    }

    public static final int CREATETIMEMILLIS_FIELD_NUMBER = 3;
    private long createTimeMillis_;
    /**
     * <code>int64 createTimeMillis = 3;</code>
     * @return The createTimeMillis.
     */
    public long getCreateTimeMillis() {
      return createTimeMillis_;
    }

    public static final int UPDATETIMEMILLIS_FIELD_NUMBER = 4;
    private long updateTimeMillis_;
    /**
     * <code>int64 updateTimeMillis = 4;</code>
     * @return The updateTimeMillis.
     */
    public long getUpdateTimeMillis() {
      return updateTimeMillis_;
    }

    public static final int STARTTIMEMILLIS_FIELD_NUMBER = 5;
    private long startTimeMillis_;
    /**
     * <code>int64 startTimeMillis = 5;</code>
     * @return The startTimeMillis.
     */
    public long getStartTimeMillis() {
      return startTimeMillis_;
    }

    public static final int ENDTIMEMILLIS_FIELD_NUMBER = 6;
    private long endTimeMillis_;
    /**
     * <code>int64 endTimeMillis = 6;</code>
     * @return The endTimeMillis.
     */
    public long getEndTimeMillis() {
      return endTimeMillis_;
    }

    public static final int FIRETIMEMILLIS_FIELD_NUMBER = 7;
    private long fireTimeMillis_;
    /**
     * <code>int64 fireTimeMillis = 7;</code>
     * @return The fireTimeMillis.
     */
    public long getFireTimeMillis() {
      return fireTimeMillis_;
    }

    public static final int PAUSETIMEMILLIS_FIELD_NUMBER = 8;
    private long pauseTimeMillis_;
    /**
     * <code>int64 pauseTimeMillis = 8;</code>
     * @return The pauseTimeMillis.
     */
    public long getPauseTimeMillis() {
      return pauseTimeMillis_;
    }

    public static final int INCREASEDTIMEMILLIS_FIELD_NUMBER = 9;
    private long increasedTimeMillis_;
    /**
     * <code>int64 increasedTimeMillis = 9;</code>
     * @return The increasedTimeMillis.
     */
    public long getIncreasedTimeMillis() {
      return increasedTimeMillis_;
    }

    public static final int ACTIVITYDATEMILLIS_FIELD_NUMBER = 10;
    private long activityDateMillis_;
    /**
     * <code>int64 activityDateMillis = 10;</code>
     * @return The activityDateMillis.
     */
    public long getActivityDateMillis() {
      return activityDateMillis_;
    }

    public static final int TITLE_FIELD_NUMBER = 11;
    private volatile Object title_;
    /**
     * <code>string title = 11;</code>
     * @return The title.
     */
    public String getTitle() {
      Object ref = title_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        title_ = s;
        return s;
      }
    }
    /**
     * <code>string title = 11;</code>
     * @return The bytes for title.
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      Object ref = title_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUMMARY_FIELD_NUMBER = 12;
    private volatile Object summary_;
    /**
     * <code>string summary = 12;</code>
     * @return The summary.
     */
    public String getSummary() {
      Object ref = summary_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        summary_ = s;
        return s;
      }
    }
    /**
     * <code>string summary = 12;</code>
     * @return The bytes for summary.
     */
    public com.google.protobuf.ByteString
        getSummaryBytes() {
      Object ref = summary_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        summary_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (timeStatus_ != 0) {
        output.writeInt32(2, timeStatus_);
      }
      if (createTimeMillis_ != 0L) {
        output.writeInt64(3, createTimeMillis_);
      }
      if (updateTimeMillis_ != 0L) {
        output.writeInt64(4, updateTimeMillis_);
      }
      if (startTimeMillis_ != 0L) {
        output.writeInt64(5, startTimeMillis_);
      }
      if (endTimeMillis_ != 0L) {
        output.writeInt64(6, endTimeMillis_);
      }
      if (fireTimeMillis_ != 0L) {
        output.writeInt64(7, fireTimeMillis_);
      }
      if (pauseTimeMillis_ != 0L) {
        output.writeInt64(8, pauseTimeMillis_);
      }
      if (increasedTimeMillis_ != 0L) {
        output.writeInt64(9, increasedTimeMillis_);
      }
      if (activityDateMillis_ != 0L) {
        output.writeInt64(10, activityDateMillis_);
      }
      if (!getTitleBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, title_);
      }
      if (!getSummaryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, summary_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (timeStatus_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, timeStatus_);
      }
      if (createTimeMillis_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, createTimeMillis_);
      }
      if (updateTimeMillis_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, updateTimeMillis_);
      }
      if (startTimeMillis_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, startTimeMillis_);
      }
      if (endTimeMillis_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, endTimeMillis_);
      }
      if (fireTimeMillis_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, fireTimeMillis_);
      }
      if (pauseTimeMillis_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, pauseTimeMillis_);
      }
      if (increasedTimeMillis_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, increasedTimeMillis_);
      }
      if (activityDateMillis_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, activityDateMillis_);
      }
      if (!getTitleBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, title_);
      }
      if (!getSummaryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, summary_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RealmTimeRecord)) {
        return super.equals(obj);
      }
      RealmTimeRecord other = (RealmTimeRecord) obj;

      if (getId()
          != other.getId()) return false;
      if (getTimeStatus()
          != other.getTimeStatus()) return false;
      if (getCreateTimeMillis()
          != other.getCreateTimeMillis()) return false;
      if (getUpdateTimeMillis()
          != other.getUpdateTimeMillis()) return false;
      if (getStartTimeMillis()
          != other.getStartTimeMillis()) return false;
      if (getEndTimeMillis()
          != other.getEndTimeMillis()) return false;
      if (getFireTimeMillis()
          != other.getFireTimeMillis()) return false;
      if (getPauseTimeMillis()
          != other.getPauseTimeMillis()) return false;
      if (getIncreasedTimeMillis()
          != other.getIncreasedTimeMillis()) return false;
      if (getActivityDateMillis()
          != other.getActivityDateMillis()) return false;
      if (!getTitle()
          .equals(other.getTitle())) return false;
      if (!getSummary()
          .equals(other.getSummary())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + TIMESTATUS_FIELD_NUMBER;
      hash = (53 * hash) + getTimeStatus();
      hash = (37 * hash) + CREATETIMEMILLIS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCreateTimeMillis());
      hash = (37 * hash) + UPDATETIMEMILLIS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUpdateTimeMillis());
      hash = (37 * hash) + STARTTIMEMILLIS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getStartTimeMillis());
      hash = (37 * hash) + ENDTIMEMILLIS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEndTimeMillis());
      hash = (37 * hash) + FIRETIMEMILLIS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFireTimeMillis());
      hash = (37 * hash) + PAUSETIMEMILLIS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPauseTimeMillis());
      hash = (37 * hash) + INCREASEDTIMEMILLIS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getIncreasedTimeMillis());
      hash = (37 * hash) + ACTIVITYDATEMILLIS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getActivityDateMillis());
      hash = (37 * hash) + TITLE_FIELD_NUMBER;
      hash = (53 * hash) + getTitle().hashCode();
      hash = (37 * hash) + SUMMARY_FIELD_NUMBER;
      hash = (53 * hash) + getSummary().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RealmTimeRecord parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RealmTimeRecord parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RealmTimeRecord parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RealmTimeRecord parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RealmTimeRecord parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RealmTimeRecord parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RealmTimeRecord parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RealmTimeRecord parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RealmTimeRecord parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RealmTimeRecord parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RealmTimeRecord parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RealmTimeRecord parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RealmTimeRecord prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pb.RealmTimeRecord}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb.RealmTimeRecord)
        RealmTimeRecordOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RealmTimeRecordPb.internal_static_pb_RealmTimeRecord_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RealmTimeRecordPb.internal_static_pb_RealmTimeRecord_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RealmTimeRecord.class, Builder.class);
      }

      // Construct using RealmTimeRecordPb.RealmTimeRecord.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        id_ = 0L;

        timeStatus_ = 0;

        createTimeMillis_ = 0L;

        updateTimeMillis_ = 0L;

        startTimeMillis_ = 0L;

        endTimeMillis_ = 0L;

        fireTimeMillis_ = 0L;

        pauseTimeMillis_ = 0L;

        increasedTimeMillis_ = 0L;

        activityDateMillis_ = 0L;

        title_ = "";

        summary_ = "";

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RealmTimeRecordPb.internal_static_pb_RealmTimeRecord_descriptor;
      }

      @Override
      public RealmTimeRecord getDefaultInstanceForType() {
        return RealmTimeRecord.getDefaultInstance();
      }

      @Override
      public RealmTimeRecord build() {
        RealmTimeRecord result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public RealmTimeRecord buildPartial() {
        RealmTimeRecord result = new RealmTimeRecord(this);
        result.id_ = id_;
        result.timeStatus_ = timeStatus_;
        result.createTimeMillis_ = createTimeMillis_;
        result.updateTimeMillis_ = updateTimeMillis_;
        result.startTimeMillis_ = startTimeMillis_;
        result.endTimeMillis_ = endTimeMillis_;
        result.fireTimeMillis_ = fireTimeMillis_;
        result.pauseTimeMillis_ = pauseTimeMillis_;
        result.increasedTimeMillis_ = increasedTimeMillis_;
        result.activityDateMillis_ = activityDateMillis_;
        result.title_ = title_;
        result.summary_ = summary_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RealmTimeRecord) {
          return mergeFrom((RealmTimeRecord)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RealmTimeRecord other) {
        if (other == RealmTimeRecord.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.getTimeStatus() != 0) {
          setTimeStatus(other.getTimeStatus());
        }
        if (other.getCreateTimeMillis() != 0L) {
          setCreateTimeMillis(other.getCreateTimeMillis());
        }
        if (other.getUpdateTimeMillis() != 0L) {
          setUpdateTimeMillis(other.getUpdateTimeMillis());
        }
        if (other.getStartTimeMillis() != 0L) {
          setStartTimeMillis(other.getStartTimeMillis());
        }
        if (other.getEndTimeMillis() != 0L) {
          setEndTimeMillis(other.getEndTimeMillis());
        }
        if (other.getFireTimeMillis() != 0L) {
          setFireTimeMillis(other.getFireTimeMillis());
        }
        if (other.getPauseTimeMillis() != 0L) {
          setPauseTimeMillis(other.getPauseTimeMillis());
        }
        if (other.getIncreasedTimeMillis() != 0L) {
          setIncreasedTimeMillis(other.getIncreasedTimeMillis());
        }
        if (other.getActivityDateMillis() != 0L) {
          setActivityDateMillis(other.getActivityDateMillis());
        }
        if (!other.getTitle().isEmpty()) {
          title_ = other.title_;
          onChanged();
        }
        if (!other.getSummary().isEmpty()) {
          summary_ = other.summary_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RealmTimeRecord parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RealmTimeRecord) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long id_ ;
      /**
       * <code>int64 id = 1;</code>
       * @return The id.
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>int64 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private int timeStatus_ ;
      /**
       * <code>int32 timeStatus = 2;</code>
       * @return The timeStatus.
       */
      public int getTimeStatus() {
        return timeStatus_;
      }
      /**
       * <code>int32 timeStatus = 2;</code>
       * @param value The timeStatus to set.
       * @return This builder for chaining.
       */
      public Builder setTimeStatus(int value) {
        
        timeStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 timeStatus = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeStatus() {
        
        timeStatus_ = 0;
        onChanged();
        return this;
      }

      private long createTimeMillis_ ;
      /**
       * <code>int64 createTimeMillis = 3;</code>
       * @return The createTimeMillis.
       */
      public long getCreateTimeMillis() {
        return createTimeMillis_;
      }
      /**
       * <code>int64 createTimeMillis = 3;</code>
       * @param value The createTimeMillis to set.
       * @return This builder for chaining.
       */
      public Builder setCreateTimeMillis(long value) {
        
        createTimeMillis_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 createTimeMillis = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCreateTimeMillis() {
        
        createTimeMillis_ = 0L;
        onChanged();
        return this;
      }

      private long updateTimeMillis_ ;
      /**
       * <code>int64 updateTimeMillis = 4;</code>
       * @return The updateTimeMillis.
       */
      public long getUpdateTimeMillis() {
        return updateTimeMillis_;
      }
      /**
       * <code>int64 updateTimeMillis = 4;</code>
       * @param value The updateTimeMillis to set.
       * @return This builder for chaining.
       */
      public Builder setUpdateTimeMillis(long value) {
        
        updateTimeMillis_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 updateTimeMillis = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearUpdateTimeMillis() {
        
        updateTimeMillis_ = 0L;
        onChanged();
        return this;
      }

      private long startTimeMillis_ ;
      /**
       * <code>int64 startTimeMillis = 5;</code>
       * @return The startTimeMillis.
       */
      public long getStartTimeMillis() {
        return startTimeMillis_;
      }
      /**
       * <code>int64 startTimeMillis = 5;</code>
       * @param value The startTimeMillis to set.
       * @return This builder for chaining.
       */
      public Builder setStartTimeMillis(long value) {
        
        startTimeMillis_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 startTimeMillis = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartTimeMillis() {
        
        startTimeMillis_ = 0L;
        onChanged();
        return this;
      }

      private long endTimeMillis_ ;
      /**
       * <code>int64 endTimeMillis = 6;</code>
       * @return The endTimeMillis.
       */
      public long getEndTimeMillis() {
        return endTimeMillis_;
      }
      /**
       * <code>int64 endTimeMillis = 6;</code>
       * @param value The endTimeMillis to set.
       * @return This builder for chaining.
       */
      public Builder setEndTimeMillis(long value) {
        
        endTimeMillis_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 endTimeMillis = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearEndTimeMillis() {
        
        endTimeMillis_ = 0L;
        onChanged();
        return this;
      }

      private long fireTimeMillis_ ;
      /**
       * <code>int64 fireTimeMillis = 7;</code>
       * @return The fireTimeMillis.
       */
      public long getFireTimeMillis() {
        return fireTimeMillis_;
      }
      /**
       * <code>int64 fireTimeMillis = 7;</code>
       * @param value The fireTimeMillis to set.
       * @return This builder for chaining.
       */
      public Builder setFireTimeMillis(long value) {
        
        fireTimeMillis_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 fireTimeMillis = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearFireTimeMillis() {
        
        fireTimeMillis_ = 0L;
        onChanged();
        return this;
      }

      private long pauseTimeMillis_ ;
      /**
       * <code>int64 pauseTimeMillis = 8;</code>
       * @return The pauseTimeMillis.
       */
      public long getPauseTimeMillis() {
        return pauseTimeMillis_;
      }
      /**
       * <code>int64 pauseTimeMillis = 8;</code>
       * @param value The pauseTimeMillis to set.
       * @return This builder for chaining.
       */
      public Builder setPauseTimeMillis(long value) {
        
        pauseTimeMillis_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 pauseTimeMillis = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearPauseTimeMillis() {
        
        pauseTimeMillis_ = 0L;
        onChanged();
        return this;
      }

      private long increasedTimeMillis_ ;
      /**
       * <code>int64 increasedTimeMillis = 9;</code>
       * @return The increasedTimeMillis.
       */
      public long getIncreasedTimeMillis() {
        return increasedTimeMillis_;
      }
      /**
       * <code>int64 increasedTimeMillis = 9;</code>
       * @param value The increasedTimeMillis to set.
       * @return This builder for chaining.
       */
      public Builder setIncreasedTimeMillis(long value) {
        
        increasedTimeMillis_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 increasedTimeMillis = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearIncreasedTimeMillis() {
        
        increasedTimeMillis_ = 0L;
        onChanged();
        return this;
      }

      private long activityDateMillis_ ;
      /**
       * <code>int64 activityDateMillis = 10;</code>
       * @return The activityDateMillis.
       */
      public long getActivityDateMillis() {
        return activityDateMillis_;
      }
      /**
       * <code>int64 activityDateMillis = 10;</code>
       * @param value The activityDateMillis to set.
       * @return This builder for chaining.
       */
      public Builder setActivityDateMillis(long value) {
        
        activityDateMillis_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 activityDateMillis = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearActivityDateMillis() {
        
        activityDateMillis_ = 0L;
        onChanged();
        return this;
      }

      private Object title_ = "";
      /**
       * <code>string title = 11;</code>
       * @return The title.
       */
      public String getTitle() {
        Object ref = title_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string title = 11;</code>
       * @return The bytes for title.
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string title = 11;</code>
       * @param value The title to set.
       * @return This builder for chaining.
       */
      public Builder setTitle(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string title = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearTitle() {
        
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <code>string title = 11;</code>
       * @param value The bytes for title to set.
       * @return This builder for chaining.
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        title_ = value;
        onChanged();
        return this;
      }

      private Object summary_ = "";
      /**
       * <code>string summary = 12;</code>
       * @return The summary.
       */
      public String getSummary() {
        Object ref = summary_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          summary_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string summary = 12;</code>
       * @return The bytes for summary.
       */
      public com.google.protobuf.ByteString
          getSummaryBytes() {
        Object ref = summary_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          summary_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string summary = 12;</code>
       * @param value The summary to set.
       * @return This builder for chaining.
       */
      public Builder setSummary(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        summary_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string summary = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearSummary() {
        
        summary_ = getDefaultInstance().getSummary();
        onChanged();
        return this;
      }
      /**
       * <code>string summary = 12;</code>
       * @param value The bytes for summary to set.
       * @return This builder for chaining.
       */
      public Builder setSummaryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        summary_ = value;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb.RealmTimeRecord)
    }

    // @@protoc_insertion_point(class_scope:pb.RealmTimeRecord)
    private static final RealmTimeRecord DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RealmTimeRecord();
    }

    public static RealmTimeRecord getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RealmTimeRecord>
        PARSER = new com.google.protobuf.AbstractParser<RealmTimeRecord>() {
      @Override
      public RealmTimeRecord parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RealmTimeRecord(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RealmTimeRecord> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RealmTimeRecord> getParserForType() {
      return PARSER;
    }

    @Override
    public RealmTimeRecord getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RealmTimeRecordsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pb.RealmTimeRecords)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .pb.RealmTimeRecord records = 1;</code>
     */
    java.util.List<RealmTimeRecord>
        getRecordsList();
    /**
     * <code>repeated .pb.RealmTimeRecord records = 1;</code>
     */
    RealmTimeRecord getRecords(int index);
    /**
     * <code>repeated .pb.RealmTimeRecord records = 1;</code>
     */
    int getRecordsCount();
    /**
     * <code>repeated .pb.RealmTimeRecord records = 1;</code>
     */
    java.util.List<? extends RealmTimeRecordOrBuilder>
        getRecordsOrBuilderList();
    /**
     * <code>repeated .pb.RealmTimeRecord records = 1;</code>
     */
    RealmTimeRecordOrBuilder getRecordsOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code pb.RealmTimeRecords}
   */
  public  static final class RealmTimeRecords extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pb.RealmTimeRecords)
      RealmTimeRecordsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RealmTimeRecords.newBuilder() to construct.
    private RealmTimeRecords(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RealmTimeRecords() {
      records_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new RealmTimeRecords();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RealmTimeRecords(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                records_ = new java.util.ArrayList<RealmTimeRecord>();
                mutable_bitField0_ |= 0x00000001;
              }
              records_.add(
                  input.readMessage(RealmTimeRecord.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          records_ = java.util.Collections.unmodifiableList(records_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RealmTimeRecordPb.internal_static_pb_RealmTimeRecords_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RealmTimeRecordPb.internal_static_pb_RealmTimeRecords_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RealmTimeRecords.class, Builder.class);
    }

    public static final int RECORDS_FIELD_NUMBER = 1;
    private java.util.List<RealmTimeRecord> records_;
    /**
     * <code>repeated .pb.RealmTimeRecord records = 1;</code>
     */
    public java.util.List<RealmTimeRecord> getRecordsList() {
      return records_;
    }
    /**
     * <code>repeated .pb.RealmTimeRecord records = 1;</code>
     */
    public java.util.List<? extends RealmTimeRecordOrBuilder>
        getRecordsOrBuilderList() {
      return records_;
    }
    /**
     * <code>repeated .pb.RealmTimeRecord records = 1;</code>
     */
    public int getRecordsCount() {
      return records_.size();
    }
    /**
     * <code>repeated .pb.RealmTimeRecord records = 1;</code>
     */
    public RealmTimeRecord getRecords(int index) {
      return records_.get(index);
    }
    /**
     * <code>repeated .pb.RealmTimeRecord records = 1;</code>
     */
    public RealmTimeRecordOrBuilder getRecordsOrBuilder(
        int index) {
      return records_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < records_.size(); i++) {
        output.writeMessage(1, records_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < records_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, records_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RealmTimeRecords)) {
        return super.equals(obj);
      }
      RealmTimeRecords other = (RealmTimeRecords) obj;

      if (!getRecordsList()
          .equals(other.getRecordsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRecordsCount() > 0) {
        hash = (37 * hash) + RECORDS_FIELD_NUMBER;
        hash = (53 * hash) + getRecordsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RealmTimeRecords parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RealmTimeRecords parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RealmTimeRecords parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RealmTimeRecords parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RealmTimeRecords parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RealmTimeRecords parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RealmTimeRecords parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RealmTimeRecords parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RealmTimeRecords parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RealmTimeRecords parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RealmTimeRecords parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RealmTimeRecords parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RealmTimeRecords prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pb.RealmTimeRecords}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pb.RealmTimeRecords)
        RealmTimeRecordsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RealmTimeRecordPb.internal_static_pb_RealmTimeRecords_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RealmTimeRecordPb.internal_static_pb_RealmTimeRecords_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RealmTimeRecords.class, Builder.class);
      }

      // Construct using RealmTimeRecordPb.RealmTimeRecords.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRecordsFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (recordsBuilder_ == null) {
          records_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          recordsBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RealmTimeRecordPb.internal_static_pb_RealmTimeRecords_descriptor;
      }

      @Override
      public RealmTimeRecords getDefaultInstanceForType() {
        return RealmTimeRecords.getDefaultInstance();
      }

      @Override
      public RealmTimeRecords build() {
        RealmTimeRecords result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public RealmTimeRecords buildPartial() {
        RealmTimeRecords result = new RealmTimeRecords(this);
        int from_bitField0_ = bitField0_;
        if (recordsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            records_ = java.util.Collections.unmodifiableList(records_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.records_ = records_;
        } else {
          result.records_ = recordsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RealmTimeRecords) {
          return mergeFrom((RealmTimeRecords)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RealmTimeRecords other) {
        if (other == RealmTimeRecords.getDefaultInstance()) return this;
        if (recordsBuilder_ == null) {
          if (!other.records_.isEmpty()) {
            if (records_.isEmpty()) {
              records_ = other.records_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRecordsIsMutable();
              records_.addAll(other.records_);
            }
            onChanged();
          }
        } else {
          if (!other.records_.isEmpty()) {
            if (recordsBuilder_.isEmpty()) {
              recordsBuilder_.dispose();
              recordsBuilder_ = null;
              records_ = other.records_;
              bitField0_ = (bitField0_ & ~0x00000001);
              recordsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRecordsFieldBuilder() : null;
            } else {
              recordsBuilder_.addAllMessages(other.records_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RealmTimeRecords parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RealmTimeRecords) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<RealmTimeRecord> records_ =
        java.util.Collections.emptyList();
      private void ensureRecordsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          records_ = new java.util.ArrayList<RealmTimeRecord>(records_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          RealmTimeRecord, RealmTimeRecord.Builder, RealmTimeRecordOrBuilder> recordsBuilder_;

      /**
       * <code>repeated .pb.RealmTimeRecord records = 1;</code>
       */
      public java.util.List<RealmTimeRecord> getRecordsList() {
        if (recordsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(records_);
        } else {
          return recordsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pb.RealmTimeRecord records = 1;</code>
       */
      public int getRecordsCount() {
        if (recordsBuilder_ == null) {
          return records_.size();
        } else {
          return recordsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pb.RealmTimeRecord records = 1;</code>
       */
      public RealmTimeRecord getRecords(int index) {
        if (recordsBuilder_ == null) {
          return records_.get(index);
        } else {
          return recordsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pb.RealmTimeRecord records = 1;</code>
       */
      public Builder setRecords(
          int index, RealmTimeRecord value) {
        if (recordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordsIsMutable();
          records_.set(index, value);
          onChanged();
        } else {
          recordsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.RealmTimeRecord records = 1;</code>
       */
      public Builder setRecords(
          int index, RealmTimeRecord.Builder builderForValue) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          records_.set(index, builderForValue.build());
          onChanged();
        } else {
          recordsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.RealmTimeRecord records = 1;</code>
       */
      public Builder addRecords(RealmTimeRecord value) {
        if (recordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordsIsMutable();
          records_.add(value);
          onChanged();
        } else {
          recordsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.RealmTimeRecord records = 1;</code>
       */
      public Builder addRecords(
          int index, RealmTimeRecord value) {
        if (recordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordsIsMutable();
          records_.add(index, value);
          onChanged();
        } else {
          recordsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pb.RealmTimeRecord records = 1;</code>
       */
      public Builder addRecords(
          RealmTimeRecord.Builder builderForValue) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          records_.add(builderForValue.build());
          onChanged();
        } else {
          recordsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.RealmTimeRecord records = 1;</code>
       */
      public Builder addRecords(
          int index, RealmTimeRecord.Builder builderForValue) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          records_.add(index, builderForValue.build());
          onChanged();
        } else {
          recordsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pb.RealmTimeRecord records = 1;</code>
       */
      public Builder addAllRecords(
          Iterable<? extends RealmTimeRecord> values) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, records_);
          onChanged();
        } else {
          recordsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pb.RealmTimeRecord records = 1;</code>
       */
      public Builder clearRecords() {
        if (recordsBuilder_ == null) {
          records_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          recordsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pb.RealmTimeRecord records = 1;</code>
       */
      public Builder removeRecords(int index) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          records_.remove(index);
          onChanged();
        } else {
          recordsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pb.RealmTimeRecord records = 1;</code>
       */
      public RealmTimeRecord.Builder getRecordsBuilder(
          int index) {
        return getRecordsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pb.RealmTimeRecord records = 1;</code>
       */
      public RealmTimeRecordOrBuilder getRecordsOrBuilder(
          int index) {
        if (recordsBuilder_ == null) {
          return records_.get(index);  } else {
          return recordsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pb.RealmTimeRecord records = 1;</code>
       */
      public java.util.List<? extends RealmTimeRecordOrBuilder>
           getRecordsOrBuilderList() {
        if (recordsBuilder_ != null) {
          return recordsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(records_);
        }
      }
      /**
       * <code>repeated .pb.RealmTimeRecord records = 1;</code>
       */
      public RealmTimeRecord.Builder addRecordsBuilder() {
        return getRecordsFieldBuilder().addBuilder(
            RealmTimeRecord.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.RealmTimeRecord records = 1;</code>
       */
      public RealmTimeRecord.Builder addRecordsBuilder(
          int index) {
        return getRecordsFieldBuilder().addBuilder(
            index, RealmTimeRecord.getDefaultInstance());
      }
      /**
       * <code>repeated .pb.RealmTimeRecord records = 1;</code>
       */
      public java.util.List<RealmTimeRecord.Builder>
           getRecordsBuilderList() {
        return getRecordsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          RealmTimeRecord, RealmTimeRecord.Builder, RealmTimeRecordOrBuilder>
          getRecordsFieldBuilder() {
        if (recordsBuilder_ == null) {
          recordsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              RealmTimeRecord, RealmTimeRecord.Builder, RealmTimeRecordOrBuilder>(
                  records_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          records_ = null;
        }
        return recordsBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pb.RealmTimeRecords)
    }

    // @@protoc_insertion_point(class_scope:pb.RealmTimeRecords)
    private static final RealmTimeRecords DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RealmTimeRecords();
    }

    public static RealmTimeRecords getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RealmTimeRecords>
        PARSER = new com.google.protobuf.AbstractParser<RealmTimeRecords>() {
      @Override
      public RealmTimeRecords parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RealmTimeRecords(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RealmTimeRecords> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RealmTimeRecords> getParserForType() {
      return PARSER;
    }

    @Override
    public RealmTimeRecords getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_RealmTimeRecord_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_RealmTimeRecord_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_RealmTimeRecords_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pb_RealmTimeRecords_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\027realm_time_record.proto\022\002pb\"\237\002\n\017RealmT" +
      "imeRecord\022\n\n\002id\030\001 \001(\003\022\022\n\ntimeStatus\030\002 \001(" +
      "\005\022\030\n\020createTimeMillis\030\003 \001(\003\022\030\n\020updateTim" +
      "eMillis\030\004 \001(\003\022\027\n\017startTimeMillis\030\005 \001(\003\022\025" +
      "\n\rendTimeMillis\030\006 \001(\003\022\026\n\016fireTimeMillis\030" +
      "\007 \001(\003\022\027\n\017pauseTimeMillis\030\010 \001(\003\022\033\n\023increa" +
      "sedTimeMillis\030\t \001(\003\022\032\n\022activityDateMilli" +
      "s\030\n \001(\003\022\r\n\005title\030\013 \001(\t\022\017\n\007summary\030\014 \001(\t\"" +
      "8\n\020RealmTimeRecords\022$\n\007records\030\001 \003(\0132\023.p" +
      "b.RealmTimeRecordB+\n\026org.royran.timebrief" +
      ".pbB\021RealmTimeRecordPbb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_pb_RealmTimeRecord_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_pb_RealmTimeRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_RealmTimeRecord_descriptor,
        new String[] { "Id", "TimeStatus", "CreateTimeMillis", "UpdateTimeMillis", "StartTimeMillis", "EndTimeMillis", "FireTimeMillis", "PauseTimeMillis", "IncreasedTimeMillis", "ActivityDateMillis", "Title", "Summary", });
    internal_static_pb_RealmTimeRecords_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_pb_RealmTimeRecords_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pb_RealmTimeRecords_descriptor,
        new String[] { "Records", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
